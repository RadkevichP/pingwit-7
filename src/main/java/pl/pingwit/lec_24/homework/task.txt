Task 1. (filter)
Есть коллекция строк, нужно убрать все элементы, длина которых меньше 5 символов

Task 2.
Возьмите класс Address и создайте список адресов. (в списке сделайте повторяющиеся адреса, несколько адресов в одном городе,
несколько адресов на одной улице, улицы с одинаковыми названиями в разных городах)
Найдите в списке все адреса из города Киев и соберите их в список.

Task 3.
Возьмите класс Address и создайте список адресов. (в списке сделайте повторяющиеся адреса, несколько адресов в одном городе,
несколько адресов на одной улице)
Найдите в списке все названия улиц и соберите их в список.

Task 4.
Возьмите класс Address и создайте список адресов. (в списке сделайте повторяющиеся адреса, несколько адресов в одном городе,
несколько адресов на одной улице)
Найдите в списке уникальные города и соберите их в список.

Task 5.
Возьмите класс Address и создайте список адресов. (в списке сделайте повторяющиеся адреса, несколько адресов в одном городе,
несколько адресов на одной улице)
Преобразуйте адреса в объекты типа CityStreet, оставьте только те, у которых городе - Варшава и соберите в set.

Task 6.
Возьмите класс Address и создайте список адресов. (в списке сделайте повторяющиеся адреса, несколько адресов в одном городе,
несколько адресов на одной улице)
Преобразуйте адреса в объекты типа CityStreet, оставьте только те, у которых городе - Киев. Далее для каждой записи
выведите в консоль: "улица: " + cityStreet

Task 7.
С помощью метода  IntStream.range(..., ...) создайте поток чисел от 50 до 150. В потоке оставьте только числа, которые делатся на 7
и соберите их в список.

Task 8
Написать функцию перевода числа в строку с добавлением денежной единицы. Например, 5 -> 5 рублей.
Если получится, то учесть правильность окончаний, если нет, то можно сократить до "руб".

Task 9
Создайте List<UserInfo>. Создайте предикат, по которому все юзеры, у которых имена начинаются с A,P,E удалялись бы из этого листа

Task 10
При помощи лямбда выражения, написать свой компаратор, который бы сортировал лист строк в обратном порядке